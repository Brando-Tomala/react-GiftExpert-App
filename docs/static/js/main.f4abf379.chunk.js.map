{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItems.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItems","className","src","alt","toUpperCase","GiftGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","key","GiftExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"uMAyBeA,EAtBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAWvC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAAU,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,QAAQG,YAAY,sC,uBCfjGC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,gDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARtB,kBAWZM,GAXY,4CAAH,sDCCPO,EAAgB,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEvC,OACI,yBAAKc,UAAU,8CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,EAAMO,iBCgBPC,EAnBE,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECAP,SAACA,GAAc,IAAD,EACZf,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAXAC,qBAAU,WACNzB,EAAQC,GAAUyB,MAAK,SAAAf,GACnBgB,YAAW,WACPH,EAAS,CACLhB,KAAMG,EACNW,SAAS,MAEd,UAER,CAACrB,IAEGsB,EDhB2BK,CAAa3B,GAAjCa,EAFiB,EAEvBN,KAAcc,EAFS,EAETA,QAEtB,OACI,oCACI,wBAAIL,UAAU,cAAchB,GAC3BqB,GAAW,uBAAGL,UAAU,oCAAb,cACZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eAAekB,IAAKlB,EAAIC,IAAQD,UEOzCmB,EAlBO,WAAO,IAAD,EAEY5C,mBAAS,CAAC,WAFtB,mBAEjB6C,EAFiB,KAEL9C,EAFK,KAIxB,OACI,6BACI,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,6BACK8C,EAAWrB,KAAI,SAAAsB,GAAG,OAAI,kBAAC,EAAD,CAAUH,IAAKG,EAAK/B,SAAU+B,U,YCNrEC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f4abf379.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 0) {\r\n            setCategories(c => [inputValue, ...c])\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} placeholder='Ingrese lo que desee buscar....' />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=htRo1RFQPm6K1DRlMlLOSQwChOVGCpHo`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItems = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomInDown\">\r\n            <img src={url} alt={title} />\r\n            <p>{title.toUpperCase()}</p>\r\n        </div >\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GiftGridItems } from './GiftGridItems';\r\n\r\nconst GiftGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"capitalize\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GiftGridItems key={img.id} {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftGrid\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(img => {\r\n            setTimeout(() => {\r\n                setstate({\r\n                    data: img,\r\n                    loading: false\r\n                })\r\n            }, 3000);\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GiftGrid from './components/GiftGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    return (\r\n        <div>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <div>\r\n                {categories.map(cat => <GiftGrid key={cat} category={cat} />)}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default GiftExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\n\nimport './index.css';\n\nimport 'animate.css'\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}